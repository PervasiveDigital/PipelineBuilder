//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PipelineBuilder.Samples.EventsAddInAdapters {
    
    
    public class IAppObjectContractToViewAddInAdapter : PipelineBuilder.Samples.Events.IAppObject {
        
        private PipelineBuilder.Samples.Events.Contracts.IAppObjectContract _contract;
        
        private System.AddIn.Pipeline.ContractHandle _handle;
        
        private IDocumentOpenedHandlerViewToContractAddInAdapter DocumentOpened_Handler;
        
        private static System.Reflection.MethodInfo s_DocumentOpenedAddFire;
        
		public event System.EventHandler<PipelineBuilder.Samples.Events.DocumentOpenedEventArgs>DocumentOpened{
			add{
				if (_DocumentOpened == null)
			{
				_contract.DocumentOpenedAdd(DocumentOpened_Handler);
			}
			_DocumentOpened += value;
			}
			remove{
				_DocumentOpened -= value;
			if (_DocumentOpened == null)
			{
				_contract.DocumentOpenedRemove(DocumentOpened_Handler);
			}
			}
		}
        
        static IAppObjectContractToViewAddInAdapter() {
            s_DocumentOpenedAddFire = typeof(IAppObjectContractToViewAddInAdapter).GetMethod("Fire_DocumentOpened", ((System.Reflection.BindingFlags)(36)));
        }
        
        public IAppObjectContractToViewAddInAdapter(PipelineBuilder.Samples.Events.Contracts.IAppObjectContract contract) {
            _contract = contract;
            _handle = new System.AddIn.Pipeline.ContractHandle(contract);
            DocumentOpened_Handler = new IDocumentOpenedHandlerViewToContractAddInAdapter(this, s_DocumentOpenedAddFire);
        }
        
        private event System.EventHandler<PipelineBuilder.Samples.Events.DocumentOpenedEventArgs> _DocumentOpened;
        
        internal virtual void Fire_DocumentOpened(PipelineBuilder.Samples.Events.DocumentOpenedEventArgs args) {
            if ((_DocumentOpened == null)) {
            }
            else {
                _DocumentOpened.Invoke(this, args);
            }
        }
        
        internal PipelineBuilder.Samples.Events.Contracts.IAppObjectContract GetSourceContract() {
            return _contract;
        }
    }
}

